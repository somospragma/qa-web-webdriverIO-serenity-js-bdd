import type { ModalDialog } from '@serenity-js/web';
import { ModalDialogHandler } from '@serenity-js/web';
import type { Page } from 'puppeteer-core';
/**
 * WebdriverIO-specific implementation of [`ModalDialogHandler`](https://serenity-js.org/api/web/class/ModalDialogHandler/), applicable when WebdriverIO
 * uses [Puppeteer](https://developer.chrome.com/docs/puppeteer/).
 *
 * Automatically handles any simple JavaScript modal dialog windows, such as
 * those opened by [`window.alert()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),
 * [`window.confirm()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),
 * or [`window.prompt()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt).
 *
 * This helps to avoid Puppeteer hanging when there's an interaction pending
 * and a dialog is already open, see https://github.com/puppeteer/puppeteer/issues/2481
 */
export declare class WebdriverIOPuppeteerModalDialogHandler extends ModalDialogHandler {
    private readonly page;
    private dialogHandlingInProgress;
    private readonly defaultHandler;
    private currentHandler;
    constructor(page: Page);
    acceptNext(): Promise<void>;
    acceptNextWithValue(text: string | number): Promise<void>;
    dismissNext(): Promise<void>;
    reset(): Promise<void>;
    discard(): Promise<void>;
    last(): Promise<ModalDialog>;
    private handleModalDialog;
}
//# sourceMappingURL=WebdriverIOPuppeteerModalDialogHandler.d.ts.map