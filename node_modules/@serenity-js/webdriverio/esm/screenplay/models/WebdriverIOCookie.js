import 'webdriverio';
import { Timestamp } from '@serenity-js/core';
import { Cookie, CookieMissingError } from '@serenity-js/web';
import { ensure, isDefined } from 'tiny-types';
/**
 * WebdriverIO-specific implementation of [`Cookie`](https://serenity-js.org/api/web/class/Cookie/).
 *
 * @group Models
 */
export class WebdriverIOCookie extends Cookie {
    browser;
    constructor(browser, cookieName) {
        super(cookieName);
        this.browser = browser;
        ensure('browser', browser, isDefined());
    }
    async delete() {
        await this.browser.deleteCookies(this.cookieName);
    }
    async read() {
        const [cookie] = await this.browser.getCookies(this.cookieName);
        if (!cookie) {
            throw new CookieMissingError(`Cookie '${this.cookieName}' not set`);
        }
        // There _might_ be a bug in WDIO where the expiry date is set on "expires" rather than the "expiry" key
        // and possibly another one around deserialising the timestamp, since WDIO seems to add several hundred milliseconds
        // to the original expiry date
        const expiry = cookie.expiry || cookie.expires;
        return {
            name: cookie.name,
            value: cookie.value,
            domain: cookie.domain,
            path: cookie.path,
            expiry: typeof expiry === 'number' && expiry >= 0
                ? Timestamp.fromTimestampInSeconds(Math.round(expiry))
                : undefined,
            httpOnly: cookie.httpOnly,
            secure: cookie.secure,
        };
    }
}
//# sourceMappingURL=WebdriverIOCookie.js.map