import type { WebdriverProtocolErrorCode } from './WebdriverProtocolErrorCode.js';
export declare class WebdriverIOErrorHandler {
    private readonly handlers;
    constructor(handlers?: Map<WebdriverProtocolErrorCode, (error: Error) => Promise<void> | void>);
    executeIfHandled<T>(error: Error, action: () => Promise<T> | T): Promise<T>;
    setHandlerFor(errorType: WebdriverProtocolErrorCode, handler: (error: Error) => Promise<void> | void): void;
    unsetHandlerFor(errorType: WebdriverProtocolErrorCode): void;
}
//# sourceMappingURL=WebdriverIOErrorHandler.d.ts.map