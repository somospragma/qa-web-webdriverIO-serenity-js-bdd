import type { Answerable, AnswersQuestions, CollectsArtifacts, UsesAbilities } from '@serenity-js/core';
import { Interaction } from '@serenity-js/core';
import type { Path } from '@serenity-js/core/lib/io';
import type { AxiosRequestConfig } from 'axios';
/**
 * @package
 */
export declare class StreamResponse extends Interaction {
    private readonly request;
    private readonly destination;
    static to(request: Answerable<AxiosRequestConfig>): {
        to: (destination: Path) => StreamResponse;
    };
    constructor(request: Answerable<AxiosRequestConfig>, destination: Path);
    /**
     * Makes the provided [`Actor`](https://serenity-js.org/api/core/class/Actor/)
     * perform this [`Interaction`](https://serenity-js.org/api/core/class/Interaction/).
     */
    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void>;
}
//# sourceMappingURL=StreamResponse.d.ts.map