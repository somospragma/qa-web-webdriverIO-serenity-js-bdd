import type { Answerable, AnswersQuestions, ChainableMetaQuestion, UsesAbilities } from '@serenity-js/core';
import { Question } from '@serenity-js/core';
import type { Locator } from './Locator';
import type { PageElement } from './PageElement';
import type { Selector } from './selectors';
/**
 * @group Models
 */
export declare class PageElementsLocator<Native_Element_Type = any> extends Question<Promise<Array<PageElement<Native_Element_Type>>>> implements ChainableMetaQuestion<PageElement<Native_Element_Type>, Question<Promise<Array<PageElement<Native_Element_Type>>>>> {
    private readonly locator;
    static fromDocumentRoot<NET>(selector: Answerable<Selector>): PageElementsLocator<NET>;
    constructor(locator: Answerable<Locator<Native_Element_Type>>);
    of(parent: Answerable<PageElement<Native_Element_Type>>): Question<Promise<Array<PageElement<Native_Element_Type>>>> & ChainableMetaQuestion<PageElement<Native_Element_Type>, Question<Promise<Array<PageElement<Native_Element_Type>>>>>;
    answeredBy(actor: AnswersQuestions & UsesAbilities): Promise<Array<PageElement<Native_Element_Type>>>;
}
//# sourceMappingURL=PageElementsLocator.d.ts.map