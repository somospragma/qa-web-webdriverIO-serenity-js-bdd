import type { JSONObject } from 'tiny-types';
import { CorrelationId } from '../../model';
import { type SerialisedActor, Timestamp } from '../../screenplay';
import { DomainEvent } from '../DomainEvent';
/**
 * Emitted upon the [`SceneFinishes`](https://serenity-js.org/api/core-events/class/SceneFinishes/) and
 * [`TestRunFinishes`](https://serenity-js.org/api/core-events/class/TestRunFinishes/) events
 * to notify the [stage crew members](https://serenity-js.org/api/core/interface/StageCrewMember/)
 * about the final state of the [actors](https://serenity-js.org/api/core/class/Actor/) and their abilities
 * before they're [released](https://serenity-js.org/api/core/interface/Discardable/).
 *
 * @group Events
 */
export declare class ActorStageExitStarts extends DomainEvent {
    readonly sceneId: CorrelationId;
    readonly actor: SerialisedActor;
    static fromJSON(o: JSONObject): ActorStageExitStarts;
    constructor(sceneId: CorrelationId, actor: SerialisedActor, timestamp?: Timestamp);
}
//# sourceMappingURL=ActorStageExitStarts.d.ts.map